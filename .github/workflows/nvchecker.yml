name: nvchecker

on:
  workflow_dispatch:
  push:
    branches:
      - main
  schedule:
    - cron: "0 */12 * * *"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  check-new-versions:
    name: Check New Versions
    runs-on: ubuntu-latest
    container:
      # image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      image: ghcr.io/sunlei/nvchecker
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.github_token }}

    steps:
      - uses: actions/checkout@v3

      - name: Set environment variables
        run: |
          echo "LOG_FILE=nvchecker_$(date +'%Y-%m-%d_%H-%M-%S').log" >> $GITHUB_ENV

      - name: Check version
        run: |
          nvchecker --logger=json --file nvchecker/config.toml 2>&1 | tee ${{ env.LOG_FILE }}
          #nvcmp --file nvchecker/config.toml > result.tmp
          nvcmp -c nvchecker/config.toml -j > result.json

          echo "{matrix}={$(cat result.json)}" >> $GITHUB_OUTPUT

          cat result.json

          # nvtake --file nvchecker/config.toml --all

      # - https://github.com/actions/runner/issues/2033
      # - https://github.com/actions/checkout/issues/1048
      # - https://github.com/actions/runner-images/issues/6775
      - name: Fix git safe.directory in container
        run: git config --global --add safe.directory /__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}

      # - name: Commit version record files
      #   uses: stefanzweifel/git-auto-commit-action@v4
      #   with:
      #     commit_message: "chore: apply version record files changes"

      #     # branch: ${{ github.head_ref }}
      #     branch: master
      #     commit_options: "--no-verify --signoff"
      #     file_pattern: ./nvchecker/*.json
      #     repository: .

      #     commit_user_name: GitHub Actions Bot
      #     commit_user_email: actions@github.com
      #     commit_author: GitHub Actions Bot <actions@github.com>

      # - name: nvchecker-action
      #   id: nvchecker-action
      #   uses: guizai/nvchecker-action@master
      #   with:
      #     source-file: 'config.toml'
  
  build:
    needs: check-new-versions
    strategy:
      matrix:
        packages: ["AriaNg", "AriaNg-Native"]
    runs-on: ubuntu-latest
    container:
      image: docker://martynas/archlinux:latest
    steps:
      - name: Start Building Packages
        run: |
          echo ${{ matrix.packages.name }}
          
