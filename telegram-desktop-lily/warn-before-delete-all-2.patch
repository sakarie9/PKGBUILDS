diff -aur tdesktop-4.11.8-full_orig/Telegram/SourceFiles/boxes/delete_messages_box.cpp tdesktop-4.11.8-full/Telegram/SourceFiles/boxes/delete_messages_box.cpp
--- tdesktop-4.11.8-full_orig/Telegram/SourceFiles/boxes/delete_messages_box.cpp	2023-11-15 01:28:24.000000000 +0800
+++ tdesktop-4.11.8-full/Telegram/SourceFiles/boxes/delete_messages_box.cpp	2023-11-23 18:03:26.179469603 +0800
@@ -23,6 +23,8 @@
 #include "lang/lang_keys.h"
 #include "main/main_session.h"
 #include "menu/menu_ttl_validator.h"
+#include "boxes/abstract_box.h"
+#include "ui/boxes/confirm_box.h"
 #include "ui/layers/generic_box.h"
 #include "ui/text/text_utilities.h"
 #include "ui/widgets/buttons.h"
@@ -79,6 +81,7 @@
 }
 
 void DeleteMessagesBox::prepare() {
+	_deleting_messages_total = 0;
 	auto details = TextWithEntities();
 	const auto appendDetails = [&](TextWithEntities &&text) {
 		details.append(u"\n\n"_q).append(std::move(text));
@@ -215,7 +218,8 @@
 					})
 				),
 				_deleteAll->checkedValue()
-			) | rpl::map([](int total, bool checked) {
+			) | rpl::map([this](int total, bool checked) {
+				this->_deleting_messages_total = total;
 				return tr::lng_box_delete(tr::now)
 					+ ((total <= 0 || !checked)
 						? QString()
@@ -304,7 +308,7 @@
 	if (canDelete) {
 		addButton(
 			deleteText->value(),
-			[=] { deleteAndClear(); },
+			[=] { promptDeleteAndClear(); },
 			*deleteStyle);
 		addButton(tr::lng_cancel(), [=] { closeBox(); });
 	} else {
@@ -490,13 +494,30 @@
 	if (e->key() == Qt::Key_Enter || e->key() == Qt::Key_Return) {
 		// Don't make the clearing history so easy.
 		if (!_wipeHistoryPeer) {
-			deleteAndClear();
+			promptDeleteAndClear();
 		}
 	} else {
 		BoxContent::keyPressEvent(e);
 	}
 }
 
+void DeleteMessagesBox::promptDeleteAndClear() {
+	if (!(this->_deleteAll) || !(this->_deleteAll->checked())) {
+		deleteAndClear();
+		return;
+	}
+	auto total = _deleting_messages_total;
+	Ui::show(
+		Ui::MakeConfirmBox({
+			.text = (total > 0) ? QString("Warning! You're deleting AT LEAST %1 messages in total!").arg(total)
+								: QString("Warning! You're deleting an UNKNOWN NUMBER of messages in total!"),
+			.confirmed = [this](Fn<void()> &&close){close();this->deleteAndClear();},
+			.confirmText = QString("Yes. Delete those messages."),
+			.confirmStyle = &st::attentionBoxButton,
+		}),
+	Ui::LayerOption::KeepOther);
+}
+
 void DeleteMessagesBox::deleteAndClear() {
 	if (_revoke
 		&& _revokeRemember
diff -aur tdesktop-4.11.8-full_orig/Telegram/SourceFiles/boxes/delete_messages_box.h tdesktop-4.11.8-full/Telegram/SourceFiles/boxes/delete_messages_box.h
--- tdesktop-4.11.8-full_orig/Telegram/SourceFiles/boxes/delete_messages_box.h	2023-11-15 01:28:24.000000000 +0800
+++ tdesktop-4.11.8-full/Telegram/SourceFiles/boxes/delete_messages_box.h	2023-11-22 14:51:39.852864363 +0800
@@ -53,6 +53,8 @@
 		TextWithEntities checkbox;
 		TextWithEntities description;
 	};
+	void promptDeleteAndClear();
+	int _deleting_messages_total = 0;
 	void deleteAndClear();
 	[[nodiscard]] PeerData *checkFromSinglePeer() const;
 	[[nodiscard]] bool hasScheduledMessages() const;
